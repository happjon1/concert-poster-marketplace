name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      # Backend steps
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend tests
        working-directory: ./backend
        run: npm test

      - name: Build backend
        working-directory: ./backend
        run: npm run build

      # Frontend steps
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      # Upload artifacts for deployment job
      - name: Upload backend build
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/dist

      - name: Upload frontend build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist

  deploy:
    needs: test-and-build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Download backend build
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: backend-build

      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend-build

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        run: |
          # Transfer backend files
          rsync -avz --delete backend-build/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/concert-poster-marketplace/backend/dist/

          # Transfer frontend files
          rsync -avz --delete frontend-build/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/concert-poster-marketplace/frontend/dist/

          # Run deployment script
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'cd /var/www/concert-poster-marketplace && ./deploy.sh'
